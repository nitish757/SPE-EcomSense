---
- name: Redeploy Forecast API to Kubernetes
  hosts: localhost
  gather_facts: no

  vars:
    namespace: "{{ lookup('env', 'K8S_NAMESPACE') | default('mlops') }}"
    k8s_base_path: "k8/"  # Folder where all K8s YAMLs are stored

  tasks:
    # - name: Start Minikube if not already running
    #   shell: |
    #     status=$(minikube status)
    #     if ! echo "$status" | grep -q "host: Running" || \
    #       ! echo "$status" | grep -q "kubelet: Running" || \
    #       ! echo "$status" | grep -q "apiserver: Running"; then
    #       minikube start --driver=docker
    #     else
    #       echo "Minikube already fully running"
    #     fi
    #   args:
    #     executable: /bin/bash
    
    # - name: Enable metrics-server if not already enabled
    #   shell: |
    #     if ! minikube addons list | grep -q 'metrics-server.*enabled'; then
    #       minikube addons enable metrics-server
    #     fi
    #   args:
    #     executable: /bin/bash

    # - name: Enable ingress if not already enabled
    #   shell: |
    #     if ! minikube addons list | grep -q 'ingress.*enabled'; then
    #       minikube addons enable ingress
    #     fi
    #   args:
    #     executable: /bin/bash

    - name: Who am I?
      ansible.builtin.shell: whoami
      register: whoami_out
      args:
        executable: /bin/bash

    - name: Show whoami output
      debug:
        var: whoami_out.stdout

    - name: Current directory
      ansible.builtin.shell: pwd
      register: pwd_out
      args:
        executable: /bin/bash

    - name: Show pwd output
      debug:
        var: pwd_out.stdout

    - name: List recursively
      ansible.builtin.shell: ls -R -lla || true
      register: ls_out
      args:
        executable: /bin/bash

    - name: Show ls output
      debug:
        var: ls_out.stdout




    - name: Ensure namespace exists
      command: kubectl apply -f {{ k8s_base_path }}namespace.yaml

    - name: Apply ConfigMap
      command: kubectl apply -f {{ k8s_base_path }}configmap.yaml -n {{ namespace }}

    - name: Apply Service
      command: kubectl apply -f {{ k8s_base_path }}service.yaml -n {{ namespace }}

    - name: Apply Deployment
      command: kubectl apply -f {{ k8s_base_path }}deployment.yaml -n {{ namespace }}

    - name: Apply Ingress
      command: kubectl apply -f {{ k8s_base_path }}ingress.yaml -n {{ namespace }}

    - name: Wait for deployment rollout
      command: kubectl rollout status deployment/forecast-api -n {{ namespace }}
      args:
        chdir: "{{ k8s_base_path }}"
      retries: 10
      delay: 5
      register: rollout_result
      until: rollout_result is success
      ignore_errors: no